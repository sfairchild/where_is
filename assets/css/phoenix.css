/* Headers */
header {
  height: var(--header-height);
  width: 100%;
  background: linear-gradient(to bottom left, #191F6F, var(--blue));
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 30px;
  box-shadow: 0 1px 6px 1px #666;
}

header .header-left {
  font-size: 44px;
  color: var(--white);
}

header .header-right {
  height: 100%;
  width: 40%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

/* search-container is the parent element */
header .search-container {
  height: 34px;
  width: 100%;
  position: relative;
}

/* header-search is the input */
header .header-search {
  height: 34px;
  width: 100%;
  padding: 3px 16px 0 16px;
  outline: none;
  border: 1px solid #666;
  border-radius: 50px;
  font-size: 20px;
  position: relative;
  z-index: 1;
}
header .header-search:hover {
  border: none;
  box-shadow: 0px 0px 3px 2px #666;
}
header .search-assist:hover .header-search,
header .header-search:focus {
  border: none;
  box-shadow: 0px 0px 3px 2px #666;
  border-radius: 15px 15px 0 0;
}
header .search-assist:hover .header-search {
  border: none;
  box-shadow: 0px 0px 3px 2px #666;
  border-radius: 15px 15px 0 0;
}

/* shield is a layer that masks the gap between the input and the suggestion list */
header .header-search:focus + .shield {
  height: 6px;
  width: 100%;
  background: var(--white);
  display: flex;
  justify-content: center;
  align-items: flex-end;
  position: absolute;
  bottom: -227;
  z-index: 2;
}
header .header-search:focus + .shield > .separator {
  height: 1px;
  width: 96%;
  border: 1px solid #666;
  border-radius: 50px;
}

/* search-assist is the suggestion list */
header .search-assist {
  height: 227px;
  width: 100%;
  background: var(--white);
  display: none;
  flex-direction: column;
  align-items: center;
  padding-top: 12px;
  position: absolute;
  border-radius: 0 0 15px 15px;
  box-shadow: 0px 0px 3px 2px #666;
  bottom: -230px; /* extra 3px to prevent shadow overlap */
  font-size: 18px;
  overflow-y: hidden;
  z-index: 0;
}
header .header-search:focus ~ .search-assist,
header .search-assist:hover {
  display: flex;
}

header .search-assist .suggestion {
  min-height: 30px;
  width: 100%;
  display: flex;
  align-items: center;
  padding: 0 16px;
  cursor: pointer;
}
header .search-assist .suggestion:hover {
  background: rgb(255, 196, 0);
  color: var(--white);
}

/* Main body */
main {
  height: calc(100vh - var(--header-height));
  width: 100%;
  display: flex;
  justify-content: space-between;
  padding: 10px;
}

/**
 * NEED INFO:
 * How will the SVG be adjusted based on location information?
 * Currently the SVG is being centered, assuming the location
 * will be returned in the center of the map
 */
main > .svg-container {
  height: 100%;
  width: 73%;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid black;
  overflow: hidden;
}

#mainSvg {
  height: 100%;
  width: 100%;
}

main .right-side {
  height: 100%;
  width: 23%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}

main .location-information {
  height: 75%;
  width: 100%;
  border: 1px solid green;
}

main .svg-tabs {
  height: 23%;
  width: 100%;
  border: 1px solid #faa500;
}

@media (min-width: 40.0rem) { /* Small devices (landscape phones, 576px and up) */

}
